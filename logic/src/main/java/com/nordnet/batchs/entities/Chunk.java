package com.nordnet.batchs.entities;

import static javax.persistence.GenerationType.IDENTITY;

// Generated 24 mars 2017 10:30:00 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chunk generated by hbm2java
 */
@Entity
@Table(name = "chunk")
public class Chunk implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Bean beanByWriter;
	private Bean beanByProcessor;
	private Bean beanByReader;
	private int commitInterval;
	private Set<Tasklet> tasklets = new HashSet<Tasklet>(0);

	public Chunk() {
	}

	public Chunk(Bean beanByWriter, Bean beanByProcessor, Bean beanByReader, int commitInterval) {
		this.beanByWriter = beanByWriter;
		this.beanByProcessor = beanByProcessor;
		this.beanByReader = beanByReader;
		this.commitInterval = commitInterval;
	}

	public Chunk(Bean beanByWriter, Bean beanByProcessor, Bean beanByReader, int commitInterval,
			Set<Tasklet> tasklets) {
		this.beanByWriter = beanByWriter;
		this.beanByProcessor = beanByProcessor;
		this.beanByReader = beanByReader;
		this.commitInterval = commitInterval;
		this.tasklets = tasklets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "writer", nullable = false)
	public Bean getBeanByWriter() {
		return this.beanByWriter;
	}

	public void setBeanByWriter(Bean beanByWriter) {
		this.beanByWriter = beanByWriter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "processor", nullable = false)
	public Bean getBeanByProcessor() {
		return this.beanByProcessor;
	}

	public void setBeanByProcessor(Bean beanByProcessor) {
		this.beanByProcessor = beanByProcessor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reader", nullable = false)
	public Bean getBeanByReader() {
		return this.beanByReader;
	}

	public void setBeanByReader(Bean beanByReader) {
		this.beanByReader = beanByReader;
	}

	@Column(name = "commit_interval", nullable = false)
	public int getCommitInterval() {
		return this.commitInterval;
	}

	public void setCommitInterval(int commitInterval) {
		this.commitInterval = commitInterval;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chunk")
	public Set<Tasklet> getTasklets() {
		return this.tasklets;
	}

	public void setTasklets(Set<Tasklet> tasklets) {
		this.tasklets = tasklets;
	}

}
